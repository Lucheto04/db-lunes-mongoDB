/* Esquema de la coleccion de 'cliente'. */ 
use("db_prime_pepo");
db.createCollection("cliente", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties:false,
            title: "cliente",
            required: ["cliente", "nombre", "apellido", "documento", "direccion", "numero"],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                cliente: {
                    bsonType: "int",
                    description: `{"status": "402", "message": "El parametro ID_Cliente es obligatorio y debe ser un numero entero (int)"}` 
                },
                nombre: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro Nombre_Cliente es obligatorio y debe ser un string"}`
                },
                apellido: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro Apellido_cliente es obligatorio y debe ser un string"}`
                },
                documento: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro DNI es obligatorio y debe ser un string"}`
                },
                direccion: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro direccion es obligatoria y debe ser un string"}` 
                },
                numero: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro telefono es obligatorio y debe ser un string"}`
                },
                Email: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro email no es obligatorio, pero debe ser un string con formato de correo"}`,
                    pattern: "^[a-zA-Z0-9.]+@",
                },
            }
        },
    },
});

/* Esquema de la coleccion de 'empleado'. */ 
use("db_prime_pepo");
db.createCollection("empleado", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "empleado",
            additionalProperties:false,
            required: ["empleado", "nombre", "apellido", "documento", "direccion", "numero", "cargo"],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                empleado: {
                    bsonType: "int",
                    description: `{"status": "402", "message": "El ID_Empleado es obligatorio y debe ser un numero entero (int)"}` 
                },
                nombre: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El nombre es obligatorio y debe ser un string"}`
                },
                apellido: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El apellido es obligatorio y debe ser un string"}`
                },
                documento: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El DNI es obligatorio y debe ser un string"}`
                },
                direccion: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "La direccion es obligatoria y debe ser un string"}`
                },
                numero: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El telefono es obligatorio y debe ser un string"}`
                },
                cargo: {
                    bsonType: "string",
                    enum: ["Gerente", "Vendedor", "Asistente"],
                    description: `{"status": "402", "message": "Solo hay 3 cargos, Gerente, Vendedor Y Asistente. Debe de ser un string"}`
                },
            }
        },
    },
});

/* Esquema de la coleccion de 'automovil'. */
use("db_prime_pepo");
db.createCollection("automovil", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "automovil",
            additionalProperties:false,
            required: ["automovil", "marca", "modelo", "anio", "tipo", "capacidad", "precio_diaro"],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                automovil: {
                    bsonType: "int",
                    description: `{"status": "402", "message": "El parametro ID_Automovil es obligatorio y debe ser un numero entero (int)"}`
                },
                marca: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro Marca_Auto es obligatoria y debe ser un string"}`
                },
                modelo: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro Modelo_Auto es obligatorio y debe ser un string"}`
                },
                anio: {
                    bsonType: "int",
                    description: `{"status": "402", "message": "El parametro Anio_Auto es obligatorio y debe ser un numero entero (int)"}`
                },
                tipo: {
                    bsonType: "string",
                    description: `{"status": "402", "message": "El parametro Tipo_Auto es obligatorio y debe ser un string"}`
                },
                capacidad: {
                    bsonType: "int",
                    description: `{"status": "402", "message": "El parametro Capacidad_Auto es obligatoria y debe ser un numero entero (int)"}`
                },
                precio_diaro: {
                    bsonType: "number",
                    description: `{"status": "402", "message": "El parametro Precio_Por_Dia es obligatorio y debe ser un numero"}`
                },
            }
        },
    },
});

/* Esquema de la coleccion de 'sucursal'. */
use("db_prime_pepo");
db.createCollection("sucursal", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        title: "sucursal",
        additionalProperties:false,
        required: ["sucursal_id", "nombre", "direccion", "telefono"],
        properties: {
            _id: {
                bsonType: 'objectId'
            },
            sucursal_id: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Sucursal es obligatorio y debe ser un numero entero (int)"}`
            },
            nombre: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Nombre es obligatorio y debe ser un string"}`
            },
            direccion: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Direccion es obligatoria y debe ser un string"}`
            },
            telefono: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Telefono es obligatorio y este debe ser un string"}`
            },
        },
    },
    },
});

/* Esquema de la coleccion de 'sucursal_automovil'. */
use("db_prime_pepo");
db.createCollection("sucursal_automovil", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties:false,
        title: "sucursal_automovil",
        required: ["sucursal", "automovil", "cantidad_autos"],
        properties: {
            _id: {
                bsonType: 'objectId'
            },
            sucursal: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Sucursal_id es oblicagorio y debe ser un numero entero (int)."}`
            },
            automovil: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Automovil_id es oblicagorio y debe ser un numero entero (int)."}`
            },
            cantidad_autos: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro Cantidad_Disponible es oblicagorio y debe ser un numero entero (int)."}`
            }
        },
    },
    },
});

/* Esquema de la coleccion de 'reserva'. */
use("db_prime_pepo");
db.createCollection("reserva", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties:false,
        title: "reserva",
        required: ["reserva", "cliente", "automovil", "reserva_fecha", "inicio","fin","estado"],
        properties: {
            _id: {
                bsonType: 'objectId'
            },
            reserva: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Reserva es oblicagorio y debe ser un numero entero (int)."}`
            },
            cliente: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Cliente_id es oblicagorio y debe ser un numero entero (int)."}`
            },
            automovil: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Automovil_id es oblicagorio y debe ser un numero entero (int)."}`
            },
            reserva_fecha: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Fecha_Reserva es oblicagorio y debe ser un string"}`
            },
            inicio: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Fecha_Inicio es oblicagorio y debe ser un string"}`
            },
            fin: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Fecha_Fin es oblicagorio y debe ser un string"}`
            },
            estado: {
                bsonType: "string",
                enum : ["Pendiente", "Confirmada", "Disponible", "Activo"],
                description: `{"status": "402", "message": "Para el parametro Estado_Reserva solo hay 4 opciones: Pendiente, Confirmada, Disponible, Activo. Tiene que ser un string"}`
            }
        },
    },
    },
});

/* Esquema de la coleccion de 'alquiler'. */
use("db_prime_pepo");
db.createCollection("alquiler", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties:false,
        title: "alquiler",
        required: ["alquiler", "cliente", "automovil", "inicio","fin","costo","estado"],
        properties: {
            _id: {
                bsonType: 'objectId'
            },
            alquiler: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Alquiler es oblicagorio y debe ser un numero entero (int)."}`
            },
            cliente: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Cliente_id es oblicagorio y debe ser un numero entero (int)."}`
            },
            automovil: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Automovil_id es oblicagorio y debe ser un numero entero (int)."}`
            },
            inicio: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Fecha_Inicio es oblicagorio y debe ser string"}`
            },
            fin: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Fecha_Fin es oblicagorio y debe ser string"}`
            },
            costo: {
                bsonType: "number",
                description: `{"status": "402", "message": "El parametro Costo_Total es oblicagorio y debe ser un numero."}`
            },
            estado: {
                bsonType: "string",
                enum : ["Pendiente", "Confirmada", "Disponible", "Activo"],
                description: `{"status": "402", "message": "Para el parametro Estado_Alquiler solo hay 4 opciones: Pendiente, Confirmada, Disponible, Activo. Tiene que ser un string"}`
            }
        },
    },
    },
});

/* Esquema de la coleccion de 'registro_devolucion'. */
use("db_prime_pepo");
db.createCollection("registro_devolucion", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties:false,
        title: "registro_devolucion",
        required: ["registro", "alquiler", "empleado", "devolucion", "combustible", "kilometraje", "monto"],
        properties: {
            _id: {
                bsonType: 'objectId'
            },
            registro: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Registro es obligatorio y debe ser un numero entero (int)."}`
            },
            alquiler: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Alquiler_id es obligatorio y debe ser un numero entero (int)."}`
            },
            empleado: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro ID_Empleado_id es obligatorio y debe ser un numero entero (int)."}`
            },
            devolucion: {
                bsonType: "string",
                description: `{"status": "402", "message": "El parametro Fecha_Devolucion es obligatorio y este debe ser un string."}`
            },
            combustible: {
                bsonType: "number",
                description: `{"status": "402", "message": "El parametro Combustible_Devuelto es obligatorio y debe ser un numero."}`
            },
            kilometraje: {
                bsonType: "int",
                description: `{"status": "402", "message": "El parametro Kilometraje_Devuelto es obligatorio y debe ser un numero entero (int)."}`
            },
            monto: {
                bsonType: "number",
                description: `{"status": "402", "message": "El parametro Monto_Adicional es obligatorio y debe ser un numero."}`
            }
        },
    },
    },
});

/* Esquema de la coleccion de 'registro_devregistro_entregaolucion'. */
use("db_prime_pepo");
db.createCollection("registro_entrega", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties:false,
        title: "registro_entrega",
        required: ["registro", "alquiler", "empleado", "entrega","combustible","kilometraje"],
        properties: {
            _id: {
                bsonType: 'objectId'
            },
            registro: {
                bsonType: "int",
                description: "El campo ID_Registro debe ser un número y estar comprendido entre 0 y 20"
            },
            alquiler: {
                bsonType: "int",
                description: "El campo ID_Alquiler_id debe ser un número y estar comprendido entre 0 y 20"
            },
            empleado: {
                bsonType: "int",
                description: "El campo ID_Empleado_id debe ser un número y estar comprendido entre 0 y 20"
            },
            entrega: {
                bsonType: "string",
                description: "Debe informar el campo Fecha_Entrega y este debe ser un string",
            },
            combustible: {
                bsonType: "number",
                description: "El campo Combustible_Entregado debe ser un número"
            },
            kilometraje: {
                bsonType: "int",
                description: "El campo Kilometraje_Entregado debe ser un número"
            }
        },
    },
    },
});